{
  "openapi": "3.0.0",
  "info": {
    "title": "Cloud Computing",
    "description": "OpenAPI Specification for the third homework.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8000",
      "description": "Development server"
    },
    {
      "url": "https://cloud-computing-fii.ew.r.appspot.com",
      "description": "Production server"
    }
  ],
  "components": {
    "securitySchemes": {
      "authorization": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "classroom": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Course"
          },
          "subject": {
            "type": "string",
            "example": "Cloud Computing"
          },
          "professor": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "example": "jane.doe@gmail.com"
              }
            }
          },
          "students": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                }
              }
            },
            "example": [
              {
                "email": "amanda.taylor@gmail.com"
              },
              {
                "email": "david.brown@gmail.com"
              }
            ]
          },
          "schedules": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "day": {
                  "type": "string",
                  "enum": [
                    "Monday",
                    "Tuesday",
                    "Wednesday",
                    "Thursday",
                    "Friday"
                  ]
                },
                "start": {
                  "type": "string",
                  "format": "hh:mm"
                },
                "end": {
                  "type": "string",
                  "format": "hh:mm"
                }
              }
            },
            "example": [
              {
                "day": "Monday",
                "start": "10:00",
                "end": "12:00"
              },
              {
                "day": "Monday",
                "start": "10:00",
                "end": "12:00"
              }
            ]
          }
        }
      }
    },
    "responses": {
      "400": {
        "description": "Request body not valid.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "failed"
                },
                "message": {
                  "type": "string",
                  "example": "Request body not valid."
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Authorization not set or not valid.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "failed"
                },
                "message": {
                  "type": "string",
                  "example": "Authorization not set."
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Classroom not found.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "failed"
                },
                "message": {
                  "type": "string",
                  "example": "Classroom not found."
                }
              }
            }
          }
        }
      }
    }
  },
  "paths": {
    "/register": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Creates a user.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "jane.doe@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "12ab#$"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "User created successfully."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "description": "User already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "User already exists."
                    }
                  }
                }
              }
            }
          },
          "415": {
            "description": "Content-Type not set to application/json.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "Content-Type not set to application/json."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Authenticates and authorizes a user.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "jane.doe@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "12ab#$"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User authenticated and authorized successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "User authenticated and authorized successfully."
                    },
                    "accessToken": {
                      "type": "string",
                      "format": "JWT"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "403": {
            "description": "Email or password is incorrect.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "Email is incorrect."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/classrooms": {
      "get": {
        "security": [
          {
            "authorization": []
          }
        ],
        "tags": [
          "classrooms"
        ],
        "summary": "Retrieves the classrooms of the specified role.",
        "parameters": [
          {
            "name": "role",
            "in": "query",
            "description": "Role",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "professor",
                "student"
              ],
              "example": "professor"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Classroom",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "classrooms": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/classroom"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "security": [
          {
            "authorization": []
          }
        ],
        "tags": [
          "classrooms"
        ],
        "summary": "Creates a classroom.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Course"
                  },
                  "subject": {
                    "type": "string",
                    "example": "Cloud Computing"
                  }
                },
                "required": [
                  "name",
                  "subject"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Classroom created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Classroom created successfully."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "409": {
            "description": "Classroom with specified name and subject already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "Classroom with specified name, subject and professor already exists."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/classrooms/{classroomId}": {
      "get": {
        "security": [
          {
            "authorization": []
          }
        ],
        "tags": [
          "classrooms"
        ],
        "summary": "Retrieves the specified classroom.",
        "parameters": [
          {
            "name": "classroomId",
            "in": "path",
            "description": "Classroom ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Classroom retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "classroom": {
                      "$ref": "#/components/schemas/classroom"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "delete": {
        "security": [
          {
            "authorization": []
          }
        ],
        "tags": [
          "classrooms"
        ],
        "summary": "Deletes the specified classroom.",
        "parameters": [
          {
            "name": "classroomId",
            "in": "path",
            "description": "Classroom ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Classroom deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Classroom deleted successfully."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "description": "User not professor of the specified classroom.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "User not professor of the specified classroom."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/classrooms/{classroomId}/professor": {
      "get": {
        "security": [
          {
            "authorization": []
          }
        ],
        "tags": [
          "professors"
        ],
        "summary": "Retrieves the professor from the specified classroom.",
        "parameters": [
          {
            "name": "classroomId",
            "in": "path",
            "description": "Classroom ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Professor retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "professor": {
                      "$ref": "#/components/schemas/classroom/properties/professor"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/classrooms/{classroomId}/students": {
      "post": {
        "security": [
          {
            "authorization": []
          }
        ],
        "tags": [
          "students"
        ],
        "summary": "Adds a student to the specified classroom.",
        "parameters": [
          {
            "name": "classroomId",
            "in": "path",
            "description": "Classroom ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Student added successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Student added successfully."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "description": "User already professor of the specified classroom.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "User already professor of the specified classroom."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "security": [
          {
            "authorization": []
          }
        ],
        "tags": [
          "students"
        ],
        "summary": "Retrieves the students from the specified classroom.",
        "parameters": [
          {
            "name": "classroomId",
            "in": "path",
            "description": "Classroom ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Students retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "students": {
                      "$ref": "#/components/schemas/classroom/properties/students"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/classrooms/{classroomId}/students/{studentId}": {
      "get": {
        "security": [
          {
            "authorization": []
          }
        ],
        "tags": [
          "students"
        ],
        "summary": "Retrieves the specified student from the specified classroom.",
        "parameters": [
          {
            "name": "classroomId",
            "in": "path",
            "description": "Classroom ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "studentId",
            "in": "path",
            "description": "Student ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Student retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "student": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "example": "amanda.taylor@gmail.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "delete": {
        "security": [
          {
            "authorization": []
          }
        ],
        "tags": [
          "students"
        ],
        "summary": "Removes the specified student from the specified classroom.",
        "parameters": [
          {
            "name": "classroomId",
            "in": "path",
            "description": "Classroom ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "studentId",
            "in": "path",
            "description": "Student ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Student removed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Student removed successfully."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "description": "User not the specified student of the specified classroom.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "User not the specified student of the specified classroom."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/classrooms/{classroomId}/schedules": {
      "post": {
        "security": [
          {
            "authorization": []
          }
        ],
        "tags": [
          "schedules"
        ],
        "summary": "Adds a schedule to the specified classroom.",
        "parameters": [
          {
            "name": "classroomId",
            "in": "path",
            "description": "Classroom ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "day": {
                    "type": "string",
                    "enum": [
                      "Monday",
                      "Tuesday",
                      "Wednesday",
                      "Thursday",
                      "Friday"
                    ],
                    "example": "Monday"
                  },
                  "start": {
                    "type": "string",
                    "format": "hh:mm",
                    "example": "10:00"
                  },
                  "end": {
                    "type": "string",
                    "format": "hh:mm",
                    "example": "12:00"
                  }
                },
                "required": [
                  "day",
                  "start",
                  "end"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Schedule added successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Schedule added successfully."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "description": "User not professor of the specified classroom.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "User not professor of the specified classroom."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "description": "Schedule already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "Schedule already exists."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "security": [
          {
            "authorization": []
          }
        ],
        "tags": [
          "schedules"
        ],
        "summary": "Retrieves the schedules of the specified classroom.",
        "parameters": [
          {
            "name": "classroomId",
            "in": "path",
            "description": "Classroom ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Schedules retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "schedules": {
                      "$ref": "#/components/schemas/classroom/properties/schedules"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "delete": {
        "security": [
          {
            "authorization": []
          }
        ],
        "tags": [
          "schedules"
        ],
        "summary": "Removes a schedule to the specified classroom.",
        "parameters": [
          {
            "name": "classroomId",
            "in": "path",
            "description": "Classroom ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "day",
            "in": "query",
            "description": "Day of the week",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday"
              ],
              "example": "Monday"
            }
          },
          {
            "name": "start",
            "in": "query",
            "description": "Start time",
            "required": true,
            "schema": {
              "type": "string",
              "format": "hh:mm",
              "example": "10:00"
            }
          },
          {
            "name": "end",
            "in": "query",
            "description": "End time",
            "required": true,
            "schema": {
              "type": "string",
              "format": "hh:mm",
              "example": "10:00"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Schedule removed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Schedule removed successfully."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "description": "User not professor of the specified classroom.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "User not professor of the specified classroom."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/oauth": {
      "get": {
        "security": [
          {
            "authorization": []
          }
        ],
        "tags": [
          "oAuth"
        ],
        "summary": "Generates redirection URL.",
        "parameters": [
          {
            "name": "scope",
            "in": "query",
            "description": "Service URL to be authorized.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "https://www.googleapis.com/auth/calendar"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Redirection URL generated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Redirection URL generated successfully."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "Scope (URL) is required.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "Scope (URL) is required."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/calendar": {
      "post": {
        "security": [
          {
            "authorization": []
          }
        ],
        "tags": [
          "calendar"
        ],
        "summary": "Adds an event in the calendar of the authorized user.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "Cloud Computing Course"
                  },
                  "day": {
                    "type": "string",
                    "enum": [
                      "Monday",
                      "Tuesday",
                      "Wednesday",
                      "Thursday",
                      "Friday"
                    ],
                    "example": "Monday"
                  },
                  "start": {
                    "type": "string",
                    "format": "hh:mm",
                    "example": "10:00"
                  },
                  "end": {
                    "type": "string",
                    "format": "hh:mm",
                    "example": "12:00"
                  }
                },
                "required": [
                  "title",
                  "day",
                  "start",
                  "end"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Event added successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "event": {
                      "type": "object",
                      "properties": {
                        "link": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "get": {
        "security": [
          {
            "authorization": []
          }
        ],
        "tags": [
          "calendar"
        ],
        "summary": "Gets the classroom events from the calendar of the authorized user.",
        "responses": {
          "200": {
            "description": "Events retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "events": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "link": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string",
                            "example": "Cloud Computing Course"
                          },
                          "day": {
                            "type": "string",
                            "enum": [
                              "Monday",
                              "Tuesday",
                              "Wednesday",
                              "Thursday",
                              "Friday"
                            ],
                            "example": "Monday"
                          },
                          "start": {
                            "type": "string",
                            "format": "hh:mm",
                            "example": "10:00"
                          },
                          "end": {
                            "type": "string",
                            "format": "hh:mm",
                            "example": "12:00"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/calendar/{eventId}": {
      "get": {
        "security": [
          {
            "authorization": []
          }
        ],
        "tags": [
          "calendar"
        ],
        "summary": "Retrieves the specified event from the specified calendar of the authorized user.",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "Event ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Event retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "event": {
                      "type": "object",
                      "properties": {
                        "link": {
                          "type": "string"
                        },
                        "title": {
                          "type": "string",
                          "example": "Cloud Computing Course"
                        },
                        "day": {
                          "type": "string",
                          "enum": [
                            "Monday",
                            "Tuesday",
                            "Wednesday",
                            "Thursday",
                            "Friday"
                          ],
                          "example": "Monday"
                        },
                        "start": {
                          "type": "string",
                          "format": "hh:mm",
                          "example": "10:00"
                        },
                        "end": {
                          "type": "string",
                          "format": "hh:mm",
                          "example": "12:00"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "security": [
          {
            "authorization": []
          }
        ],
        "tags": [
          "calendar"
        ],
        "summary": "Removes the specified event from the specified calendar of the authorized user.",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "Event ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Event removed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Event removed successfully."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    }
  }
}